name: Create Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      pre_release:
        description: 'Create as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate version format
        run: |
          if ! [[ $(cat VERSION) =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format in VERSION file"
            exit 1
          fi

  generate_changelog:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './VERSION'
          output-file: 'CHANGELOG.md'
          skip-version-file: true
          skip-commit: true
          release-count: 0

  release:
    needs: [validate, generate_changelog]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and create tag
        id: bump_version
        run: |
          current_version=$(cat VERSION)
          # Split version into components
          IFS='.' read -r -a version_parts <<< "$current_version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          # Bump the specified part
          case "${{ github.event.inputs.bump }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac

          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "$new_version" > VERSION
          echo "new_version=$new_version" >> $GITHUB_ENV
      
      - name: Commit and push changes
        run: |
          git add VERSION CHANGELOG.md
          git commit -m "chore: release v${{ env.new_version }}"
          git tag "v${{ env.new_version }}"
          git push origin main --follow-tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CHANGELOG.md
            VERSION
          tag_name: v${{ env.new_version }}
          name: Release v${{ env.new_version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ github.event.inputs.pre_release }} 