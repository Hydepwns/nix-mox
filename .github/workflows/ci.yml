name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system: [x86_64-linux, aarch64-linux]
        nix-version: ['2.19.2', '2.20.1']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: nix-mox
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: nix-store-${{ runner.os }}-${{ matrix.nix-version }}-${{ hashFiles('**/*.nix') }}
          restore-keys: |
            nix-store-${{ runner.os }}-${{ matrix.nix-version }}-
      - name: Build all packages
        run: nix build .#all --system ${{ matrix.system }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nix-mox-${{ matrix.system }}-${{ matrix.nix-version }}
          path: result

  test:
    needs: [build_packages]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: nix-mox
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: nix-store-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-keys: |
            nix-store-${{ runner.os }}-
      - name: Run tests
        run: |
          nix flake check --accept-flake-config --impure
          nu scripts/core/run-tests.nu

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build_packages, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: nix-mox
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            result-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
