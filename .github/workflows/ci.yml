name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_packages:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      matrix:
        system: [x86_64-linux, aarch64-linux]
        nix-version: ['2.19.2', '2.20.1']
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
      - name: Check for Cachix Key
        id: cachix-key-check
        shell: bash
        run: |
          if [ -n "${{ secrets.CACHIX_SIGNING_KEY }}" ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi
      # Temporarily disabled due to signing key mismatch
      # - name: Push to Cachix
      #   if: steps.cachix-key-check.outputs.present == 'true'
      #   uses: cachix/cachix-action@v15
      #   with:
      #     name: nix-mox
      #     authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      #     signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      #   continue-on-error: true
      - name: Build lightweight packages first
        run: |
          echo "Building lightweight packages for ${{ matrix.system }}..."
          nix build .#proxmox-update .#nixos-flake-update --system ${{ matrix.system }} --accept-flake-config --timeout 1800
        continue-on-error: true
      - name: Build heavy packages (aarch64 with reduced parallelism)
        if: matrix.system == 'aarch64-linux'
        run: |
          echo "Building heavy packages for aarch64 with reduced parallelism..."
          NIX_BUILD_CORES=1 nix build .#vzdump-backup .#zfs-snapshot --system ${{ matrix.system }} --accept-flake-config --timeout 5400
        continue-on-error: true
      - name: Build heavy packages (x86_64)
        if: matrix.system == 'x86_64-linux'
        run: |
          echo "Building heavy packages for x86_64..."
          nix build .#vzdump-backup .#zfs-snapshot --system ${{ matrix.system }} --accept-flake-config --timeout 5400
        continue-on-error: true
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nix-mox-${{ matrix.system }}-${{ matrix.nix-version }}
          path: result*
          if-no-files-found: ignore
        continue-on-error: true

  test:
    needs: [build_packages]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
      - name: Check for Cachix Key
        id: cachix-key-check
        shell: bash
        run: |
          if [ -n "${{ secrets.CACHIX_SIGNING_KEY }}" ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi
      # Temporarily disabled due to signing key mismatch
      # - name: Push to Cachix
      #   if: steps.cachix-key-check.outputs.present == 'true'
      #   uses: cachix/cachix-action@v15
      #   with:
      #     name: nix-mox
      #     authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      #     signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      #   continue-on-error: true
      - name: Run tests
        run: |
          nix flake check --accept-flake-config --impure
        continue-on-error: true

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build_packages, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
      - name: Setup Cachix (optional)
        run: |
          if [ -n "${{ secrets.CACHIX_SIGNING_KEY }}" ]; then
            echo "Setting up Cachix..."
            if command -v cachix &> /dev/null; then
              cachix use nix-mox
            else
              echo "Cachix not available, skipping setup"
            fi
          else
            echo "CACHIX_SIGNING_KEY not set, skipping Cachix setup"
          fi
        continue-on-error: true
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            result-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
