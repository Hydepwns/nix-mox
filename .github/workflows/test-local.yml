name: Test Local

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        type: choice
        options:
          - all
          - basic
          - performance
          - cross-platform
        default: 'all'

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: nixos/nix:2.19.2
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nix
        uses: ./.github/actions/setup-nix
        with:
          nix-version: '2.19.2'

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3
        with:
          version: "0.104"
          check-latest: false

      - name: Configure Git for local testing
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "test@example.com"
          git config --global user.name "Test User"

      - name: Basic Tests
        if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'basic' }}
        uses: ./.github/actions/run-tests
        with:
          test-suites: 'unit,integration'
          verbose: 'true'
          generate-coverage: 'true'

      - name: Performance Tests
        if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'performance' }}
        shell: nu {0}
        run: |
          $env.CI = "true"
          print "üöÄ Running performance benchmarks..."

          # Test nix-mox script
          time ./scripts/common/nix-mox.nu --script install --platform auto --dry-run
          time ./scripts/common/nix-mox.nu --script install --platform auto --debug

          # Run unit tests
          time nu -c "source scripts/testing/run-tests.nu; run ['--unit']"

      - name: Cross-Platform Tests
        if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'cross-platform' }}
        shell: nu {0}
        run: |
          $env.CI = "true"
          print "üåê Testing cross-platform compatibility..."

          # Test nix-mox script
          ./scripts/common/nix-mox.nu --script install --debug

          # Run tests
          nu -c "source scripts/testing/run-tests.nu; run ['--unit', '--integration']"

          # Test flake evaluation for different systems
          nix eval .#packages.x86_64-linux --accept-flake-config --json
          nix eval .#packages.x86_64-darwin --accept-flake-config --json

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            *.log
            test-results/
            coverage-tmp/
          if-no-files-found: warn
